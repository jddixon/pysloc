# ~/dev/py/pysloc/.langMap

# All lines in this file must consist of a standard pySloc file short name
# followed by a colon (':') followed by the name of a file.  This may be a 
# path relative to the project directory.  Comments started with a sharp
# sign ('#') are acceptable, as are blank lines.  It is not necessary but
# it is recommended that the lines be sorted by file name

# 'code' is a valid "language"; it indicates that lines in a file can be
# counted by skipping blank lines and ignoring comments beginning with a
# sharp sign.

# standard files 
txt:std:.gitignore
txt:std:MANIFEST.in
bash:std:auto8it
bash:std:countem
bash:std:installit
code:std:.langMap
bash:std:test.all

# pairs specific to this project
aug:local:commentsForAugeas
cpp:local:commentsForCpp
css:local:commentsForCss
for:local:commentsForFortran
f90+:local:commentsForFortran90
go:local:commentsForGo
gperf:local:commentsForGperf
hs:local:commentsForHaskell
html:local:commentsForHtml
java:local:commentsForJava
lisp:local:commentsForLisp
json:local:commentsForJson
matlab:local:commentsForMatlab
ml:local:commentsForOCaml
occ:local:commentsForOccam
octave:local:commentsForOctave
pas:local:commentsForPascal
perl:local:commentsForPerl
php:local:commentsForPHP
proto:local:commentsForProtobuf
py:local:commentsForPy
r2c:local:commentsForRe2c
Rmd:local:commentsForRMarkdown
scala:local:commentsForScala
sno:local:commentsForSno
tex:local:commentsForTeX
txt:local:commentsForTxt
xml:local:commentsForXml
c:local:couldBeGenerated.pb-c.c
c:local:couldBeGenerated.pb-c.h
cpp:local:couldBeGenerated.pb.cpp
cpp:local:couldBeGenerated.pb.h
go:local:couldBeGenerated.pb.go
py:local:couldBeGenerated_pb2.py
java:local:couldBeGeneratedProtos.java
txt:local:yyFoo
go:local:yyFoo.go
lex:local:yyFoo.l
occ:local:yyFoo.occ
py:local:yyFoo.py
sno:local:yyFoo.sno
yacc:local:yyFoo.y
py:global:pySloc
