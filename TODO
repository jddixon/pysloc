# ~/dev/py/pysloc/TODO

2016-02-10
    * add m4 macro processing language, extension *.m4                  * DONE
    * add support for Octave with file extension *.m,					* DONE
        - mainlang must be 'octave'						                * DONE
        - single line comment begins with # or %						* DONE
        - multi-line comments begin with #{ or %{, end with #} or %}	* DONE
    * add support for MATLAB with file extension *.m,					* DONE
        - mainlang must be 'matlab'						                * DONE
        - single line comment begins with %						        * DONE
        - multi-line comments begin with %{, end with %}				* DONE

    * most common use of *.m is probably with Objective C
    * add support for Objective C as objc
        - if objc is mainLang count *.h and *.m as objc

2016-02-09 (edited from -5)
    * add support for JSON                                              * DONE
        - comments are deliberately forbidden in the spec               * TRUE
    * add commentsForJson, should include eg Wikipedia JSON sample      * DONE
            (with attr)                                                 * DONE
    * add complementary testJsonComments.py                             * DONE

2016-02-08
    * summary line at bottom of countem report should be sorted and     * BYSIZE
        should never contain a zero count                               * DONE

2016-02-08, edited from 05
    * add support for *.Rmd (RMarkdown)
        - count YAML at top ... as R 
            * including dashed lines before and after
        - count code chunks as R
        - count in-line R values

    * EXPERIMENT: introduce countLinesR() whose third parameter
        is either 'R' or 'Rmd', calling countLinesNotSharp() in 
        the first case and _countLinesRmd() in the second

2016-02-08 (edited from -02)
    * add support for perl  (*.pl, *.pm), comments begin with #         * DONE
    * treat as multiline comments blocks beginning with ^=pod and 
        ending with ^=cut
    * also multiline comments beginning with '^= for comment' and 
        ending with ^=cut

2016-02-07
    * YAML counting not quite right: need whitespace between sharp
        sign and precding token, if any

2016-02-06
    * revisit commentsForOCaml and its test                             * DONE

2016-02-05
    * add support for YAML 
        - comments follow #, extend to end of line)                     * DONE
        - # MUST be preceded by whitespace
        - # inside string is ignored
        - *.Rmd of course contain YAML ...
        - yyFoo.yaml should include eg Wikipedia YAML sample

2016-02-02
    * py: consider modifying pySloc to consider triple-DQUOTEd strings
        that are not assigned to a variable to be comments
        - so """this would be a comment"""
        - but this = """ would be counted as source code"""

    * pySloc counts files whose names end in .txt by default; this      * DOEN
        SHOULD NOT be the default behavior.  Modify to simply ignore    * DONE
        *.txt except where on the command line                          * DONE

        - or add an option to count *.txt

    * add Augeas as a language, files have extension .aug, comments     * DONE
        are (* like this *) and can be nested                           * DONE
    
    * add support for yacc  (C-style comments, *.y)                     * DONE
    * add support for lex   (C-style comments, *.l)                     * DONE
    * add support for pascal (*.pas; comments are {...} or (*...*)      * DONE
        but the starters and enders can be swapped; some people         * DONE
        allow comments to be nested                                     * DONE

    * it would be only reasonable to look at the first line of files
        without an extension for sha-bang lines like #!/bin/bash
        - could also look at the permissions bit on the file

2016-01-24
    * in eg xlreg_py testData is NOT covered by an exclusion (-X)
        but files are not being counted: investigate
    * xlreg_py: which sudden drop of roughly 300 SLOC ?

2016-01-23
    * in upax_go, cmd/ and subdirectories are ignored unless eg
        cmd/upaxMirror/upaxMirror.go is added to command line;
        should be found automatically

2016-01-22
    * countem in eg upax_go reads executable upaxServer although        * GONE
        it should be ignored, given that it has no file name            * GONE
        extension; this in turn causes a utf-8 decode error             * GONE
        (invalid start byte)                                            * GONE

2016-01-17
    * couldBeGenerated_pb2.py resists being committed                   * FIXED

2016-01-16
    * add protobuf (extension .proto) to languages recognized           * DONE
    * count .gitignore as text                                          * DONE
    * filters protobuf-generated files from line counts; and test		* DONE
        - C								                                * DONE
        - C++								                            * DONE
        - Go								                            * DONE
        - Java								                            * DONE
        - Python								                        * DONE
    * add filter-and-test for ruby
    * add filter-and-test for OCaml
    * add filter-and-test for haskell

2016-01-15
    * yesterday's fixes introduced a BUG: you now need to specify       * FIXED
        at least one file name (such as '.') on the pySloc command line * FIXED

2016-01-14
    * testXmlComments.py is now generating a warning from               * GONE
        BeautifulSoup :-(                                               * GONE

2016-01-14
    * must examine effects of for line continuation character
        (backslash at EOL)
        - C
        - python
    
    * for a list of such tools [code generators] see
        https://en.wikipedia. rg/wiki/Comparison_of_parser_generators

2016-01-04
    * need to test for pathological cases, like Scala or Java
        file beginning with */

2015-12-01
    * need some testing for C++ other than that in testQ.py

2015-11-28 (edited from -09-03)
    * support PHP comments
        - single line: comment starts with # or //
        - multi-line: C-style /* like this */
        - comments preceded by sharp sign (#)
        - see php.net/manual/en/language.basic.syntax.comments.php
            * 'The "one-line" comment styles only comment to the end
                of the line or the current block of PHP code,
                whichever comes first.'
            * C-style comments (/* ... */) may not be nested
    * map .php extension to php programming language
    * write testPHPComments.py to exercise commentsForPHP (21 lines,
        6 of which SLOC)

2015-08-12
    * Html handling needs improvement, specifically an HTML comment
        should be <!-- (.*) --> where the middle bit excludes -- and >
    * countLinesJavaStyle() should be reworked to use uncommentJava()

2015-04-29
    * grand total line contains no test information (compare
        goSloc, which has two such lines, first source, then test)

2015-04-22
    * FIX: XML processing is remarkably inefficient
        - and needs more testing

2015-04-13 (edited from -11)
    * add countLinesGeneric which has a pattern or regexp for whatever
        starts a comment line

2015-04-08
    * figure out how to differentiate C *.h from C++ *.h
    * write commentsForJava and testJavaComments
    * write commentsForC and testCComments
    * write commentsForCPlusPlus and testCPlusPlusComments

2015-04-07
    * FIX: fusegen count includes lang None with a count of zero
    * FIX: markdown counts are dominated by html:6927/6695; dunno
        where the test counts come from!
    * FIX: xxxfs counts are from autogen.sh and ltmain.sh; nothing
        for *.c, *.h -- ie
        - we need to ignore library and generated shell code
        - we need to count Makefiles, *.ac, *.am
        - but ignore Makefile.in, other generated files
        - and we need to count C code
            * ah but in this case (a) *.inc and (b) all *.c/h is
                generated code
    * FIX: notCodeDir() is not being used
    * commentsForOcaml needs to be longer

2015-04-06 (edited from -03)
    * uncomment
        TQUOTE = '"""'
        in commentsForPy and get testPyComments.py working

2015-04-04
    * countLinesGeneric, countLinesPython should honor the line
        continuation character (backslash at end of line) - but
        how exactly?

2015-04-01 [from snosloc/TODO]
    * add ext2lang, map guessing language from file extension
        - one language is 'notCode'
    * add notCodeFiles set, list of file names which don't contain code
        (COPYING, README and such)
    * add command line option -L/--languges for csv list of languages
        (abbrev) to be counted; default = count all
    * integrate [snoSloc into] existing pySloc
    * output is langCount, a map, abbrev->(LOC, SLOC, TSLOC), where
        TSLOC is SLOC for tests
    * assume can use the same counter for Java and Go
    * the perils of Perl: www.perlmonks.org/?node_id=100344

2015-02-16
    * handle pathological cases
        - SQUOTEd TQUOTE: '"""' or 'like """ this'

