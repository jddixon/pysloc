# ~/dev/py/pysloc/TODO

2015-12-30
    * edit commentsForScala to test nested comments
    * ediit __init__.py :: to handle nested comments correctly

2015-12-30
    * pySloc needs to be able to count scala SLOC                       * DONE
        - java style comments                                           * DONE
            * comments may be nested
        - file names end in .scala                                      * DONE
            * but scripts ending in .sca and .scb are for another       * YEP
                language also called 'scala'                            * YEP

2015-12-18
    * in the case of dplyr, there is NO C code present but many		    * DONE
        *.h and *.cpp; we want to be able to specify that the primary	* DONE
        language is C++ and automatically switch the mapping of *.h		* DONE
        to C++		                                                    * DONE

2015-12-17
    * occam comments begin with double dash (--) and extend to end      * DONE
        of line; file names generally seem to have the .occ extension   * DONE
    * the extension .inc is sometimes used for occam source code; 		* FIXED
        most uses seem more recent and often particular to Fred Barnes	* FIXED
        - PRACTICE: if mainLang=='occ' add 'inc' to 'occ' mapping for	* FIXED
            this run only		*                                       * FIXED
            * so we add 'inc' => 'occ' to _langMap		                * FIXED
        - can verify this works uing the kroc distribution		        * FIXED

2015-12-01
    * need some testing for C++ other than that in testQ.py

2015-11-28 (edited from -09-03)
    * support PHP comments 
        - single line: comment starts with # or //
        - multi-line: C-style /* like this */
        - comments preceded by sharp sign (#)
        - see php.net/manual/en/language.basic.syntax.comments.php
            * 'The "one-line" comment styles only comment to the end
                of the line or the current block of PHP code, 
                whichever comes first.'
            * C-style comments (/* ... */) may not be nested
    * map .php extension to php programming language
    * write testPHPComments.py to exercise commentsForPHP (21 lines, 
        6 of which SLOC)

2015-09-02
    * testQ mapping of *.r to R programming language                    * DONE
    * ditto for *.js

2015-09-02
    * add Haskell: comments begin with --, file names end with .hs
    * add R, comments begin with #                                      * DONE
    * add Javascript/node.js, comments like Java                        * DONE

2015-08-12
    * Html handling needs improvement, specifically an HTML comment
        should be <!-- (.*) --> where the middle bit excludes -- and >
    * countLinesJavaStyle() should be reworked to use uncommentJava()
    * get rid of debug print statements!                                * DONE

2015-04-30
    * SERIOUS: running pySloc on build.xml reports zero SLOC            * FIXED

2015-04-29
    * grand total line contains no test information (compare 
        goSloc, which has two such lines, first source, then test)

2015-04-22
    * FIX: XML processing is remarkably inefficient
        - and needs more testing

2015-04-13 (edited from -11)
    * add countLinesGeneric which has a pattern or regexp for whatever
        starts a comment line

2015-04-08
    * figure out how to differentiate C *.h from C++ *.h 
    * write commentsForJava and testJavaComments
    * write commentsForC and testCComments
    * write commentsForCPlusPlus and testCPlusPlusComments

2015-04-07
    * FIX: fusegen count includes lang None with a count of zero
    * FIX: markdown counts are dominated by html:6927/6695; dunno
        where the test counts come from!
    * FIX: xxxfs counts are from autogen.sh and ltmain.sh; nothing
        for *.c, *.h -- ie 
        - we need to ignore library and generated shell code 
        - we need to count Makefiles, *.ac, *.am
        - but ignore Makefile.in, other generated files
        - and we need to count C code
            * ah but in this case (a) *.inc and (b) all *.c/h is 
                generated code
    * FIX: notCodeDir() is not being used
    * commentsForOcaml needs to be longer

2015-04-06 (edited from -03)
    * uncomment
        TQUOTE = '"""'
        in commentsForPy and get testPyComments.py working

2015-04-04
    * countLinesGeneric, countLinesPython should honor the line
        continuation character (backslash at end of line) - but
        how exactly?

2015-04-01 [from snosloc/TODO]
    * add ext2lang, map guessing language from file extension
        - one language is 'notCode'
    * add notCodeFiles set, list of file names which don't contain code
        (COPYING, README and such)
    * add command line option -L/--languges for csv list of languages
        (abbrev) to be counted; default = count all
    * integrate [snoSloc into] existing pySloc
    * output is langCount, a map, abbrev->(LOC, SLOC, TSLOC), where
        TSLOC is SLOC for tests
    * assume can use the same counter for Java and Go
    * the perils of Perl: www.perlmonks.org/?node_id=100344 

2015-02-16
    * handle pathological cases 
        - SQUOTEd TQUOTE: '"""' or 'like """ this'

